1. В консоли запросить имя пользователя. В зависимости от
текущего времени, вывести приветствие вида
"Доброе утро, <Имя>!", если время от 05:00 до 11:59
"Добрый день, <Имя>!", если время от 12:00 до 17:59;
"Добрый вечер, <Имя>!", если время от 18:00 до 22:59;
"Доброй ночи, <Имя>!", если время от 23:00 до 4:59

2. Дан массив двоичных чисел, например [1,1,0,1,1,1,1], вывести максимальное количество подряд идущих 1.
Найти максимальное количество подряд идущих одинаковых
элементов массива. (постараться сделать с одним циклом)

3. Дан массив nums = [3,2,1,2,3] и число val = 3.
Если в массиве есть числа, равные заданному, нужно перенести эти элементы в конец массива.
Таким образом, первые несколько (или все) элементов массива должны быть отличны от заданного, а остальные - равны ему.
[2,2,3,3]

4. Напишите метод, который находит самую длинную строку общего префикса среди массива строк.
Если общего префикса нет, вернуть пустую строку "".
Input: ["flower","flow","flight"]
Output: "fl"
String names = …
String[] words = names .split(“ “)

5. Во фразе "Добро пожаловать на курс по Java" переставить слова в обратном порядке

6. Реализовать функцию возведения числа а в степень b. a, b из Z.
Сводя количество выполняемых действий к минимуму.
Пример 1: а = 3, b = 2, ответ: 9
Пример 2: а = 2, b = -2, ответ: 0.25
Пример 3: а = 3, b = 0, ответ: 1

7. На вход некоторому исполнителю подаётся два числа (a, b). У исполнителя есть две команды
- команда 1 (к1): увеличить в с раза, а умножается на c
- команда 2 (к2): увеличить на d ( +2 ), к a рибавляется d
Написать программу, которая выдаёт набор команд, позволяющий число a превратить в число b или сообщить, что это невозможно
Пример 1: а = 1, b = 7, c = 1, d = 3
ответ: к1, к1, к1, к1, к1, к1 или к1, к2, к1, к1, к1 или к1, к1, к2, к1. 
Пример 2: а = 11, b = 7, c = 2, d = 1
ответ: “”. 

8. Дан массив целых чисел, упорядоченный строго по возрастанию.
Дано некоторое число X, нужно менее чем за квадратное количество операций(то есть перебор всех пар) найти такие два любых элемента массива, что их сумма равна X, иначе вывести 0.

9. Вычислить n-ое треугольного число(сумма чисел от 1 до n), n! (произведение чисел от 1 до n)

10. Вывести все простые числа от 1 до 1000

11. Реализовать простой калькулятор (пользователь вводит 2 числа и вводит операцию (+ - / *). Добавить логирование. Добавить возможность удалить последнюю операцию

12. Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от 0 до 100) многочлена многочлен степени k. 
*Пример: k=2 => 2*x² + 4*x + 5 = 0 или x² + 5 = 0 или 10*x² = 0

13. Дано четное число N (>0) и символы c1 и c2. Написать метод, который вернет строку длины N, которая состоит из чередующихся символов c1 и c2, начиная с c1.
N=5
c1=”Oleg”
c2=”Vasya”
res = “OlegVasyaOlegVasyaOleg”

14. Напишите метод, который сжимает строку. 
Пример: вход aaaabbbcdd.
Выход abcd
charAt(i) и indefOf(s)

15. Напишите метод, который принимает на вход строку (String) и определяет является ли строка палиндромом (возвращает boolean значение).
equals и StringBulder для revers

16. Напишите метод, который составит строку, состоящую из 100 повторений слова TEST и метод, который запишет эту строку в простой текстовый файл, обработайте исключения.

17. Напишите метод, который вернет содержимое текущей папки в виде массива строк.
Напишите метод, который выведет массив, возвращенный предыдущим методом в файл.
Обработайте ошибки с помощью try-catch конструкции. В случае возникновения исключения, оно должно записаться в лог-файл.
https://metanit.com/java/tutorial/6.11.php

18. Напишите метод, который определит тип (расширение) файлов из 
текущей папки и выведет в консоль результат вида
1 Расширение файла: txt
2 Расширение файла: pdf
3 Расширение файла: 
4 Расширение файла: jpg
private static String getFileExtension(String str) {
 int index = str.indexOf('.');
 return index == -1? null : str.substring(index);//обрезать расширение
}

19. Дана строка sql-запроса "select * from students where ". Сформируйте часть WHERE этого запроса, используя StringBuilder. Данные для фильтрации приведены ниже в виде json строки.
Если значение null, то параметр не должен попадать в запрос.
Параметры для фильтрации: {"name":"Ivanov", "country":"Russia", "city":"Moscow", "age":"null"} 
Результат "select * from students where “name” = “Ivanov” and “country”=”Russia” …

20. Реализуйте алгоритм сортировки пузырьком числового массива, результат после каждой итерации запишите в лог-файл.

21. Дана json строка (можно сохранить в файл и читать из файла)
[{"фамилия":"Иванов","оценка":"5","предмет":"Математика"},
{"фамилия":"Петрова","оценка":"4","предмет":"Информатика"},
{"фамилия":"Краснов","оценка":"5","предмет":"Физика"}]
Написать метод(ы), который распарсит json и, используя StringBuilder, создаст строки вида: Студент [фамилия] получил [оценка] по предмету [предмет].
Пример вывода:
Студент Иванов получил 5 по предмету Математика.
Студент Петрова получил 4 по предмету Информатика.
Студент Краснов получил 5 по предмету Физика.

22. Заполнить список десятью случайными числами. 
Отсортировать список методом sort() и вывести его на экран.

23. Заполнить список названиями планет Солнечной системы в произвольном порядке с повторениями. 
Вывести название каждой планеты и количество его повторений в списке.
Пройти по списку из предыдущего задания и удалить повторяющиеся элементы.

24. Создать список типа ArrayList<String>. Поместить в него как строки, так и целые числа. Пройти по списку, найти и удалить целые числа.

25. Реализовать алгоритм сортировки слиянием

26. Пусть дан произвольный список целых чисел, удалить из него четные числа

27. Задан целочисленный список ArrayList. Найти минимальное, максимальное и среднее из этого списка

28. Замерьте время, за которое в ArrayList добавятся 10000 элементов. Замерьте время, за которое в LinkedList добавятся 10000 элементов.
Сравните с предыдущим.

29. Реализовать консольное приложение, которое:
Принимает от пользователя строку вида text~num
Нужно рассплитить строку по ~, сохранить text в связный список на позицию num.
Если введено print~num, выводит строку из позиции num в связном списке и удаляет её из списка.

30. Реализовать консольное приложение, которое:
Принимает от пользователя и “запоминает” строки.
Если введено print, выводит строки так, чтобы последняя введенная
была первой в списке, а первая - последней.
Если введено revert, удаляет предыдущую введенную строку из памяти.

31. Написать метод, который принимает массив элементов, помещает их в стэк и выводит на консоль содержимое стэка.
Написать метод, который принимает массив элементов, помещает их в очередь и выводит на консоль содержимое очереди.

32. Реализовать алгоритм перевода из инфиксной записи в постфиксную для арифметического выражения.
http://primat.org/news/obratnaja_polskaja_zapis/2016-04-09-1181
Вычислить запись если это возможно.

33. Пусть дан LinkedList с несколькими элементами. Реализуйте метод, который вернет “перевернутый” список.

34. Реализуйте очередь с помощью LinkedList со следующими методами:
enqueue() - помещает элемент в конец очереди, dequeue() - возвращает первый элемент из очереди и удаляет его, first() - возвращает первый элемент из очереди, не удаляя.

35. Создать структуру для хранения Номеров паспортов и Фамилий сотрудников организации.
123456 Иванов
321456 Васильев
234561 Петрова
234432 Иванов
654321 Петрова
345678 Иванов
Вывести данные по сотрудникам с фамилией Иванов.

36. Даны 2 строки, написать метод, который вернет true, если эти строки являются изоморфными и false, если нет. Строки изоморфны, если одну букву в первом слове можно заменить на некоторую букву во втором слове, при этом
- повторяющиеся буквы одного слова меняются на одну и ту же букву с сохранением порядка следования. (Например, add - egg изоморфны)
- буква может не меняться, а остаться такой же. (Например, note - code)
Пример 1:
Input: s = "foo", t = "bar"
Output: false
Пример 2:
Input: s = "paper", t = "title"
Output: true

37. Написать программу, определяющую правильность расстановки скобок в выражении.
Пример 1: a+(d*3) - истина
Пример 2: [a+(1*3) - ложь
Пример 3: [6+(3*3)] - истина
Пример 4: {a}[+]{(d*3)} - истина
Пример 5: <{a}+{(d*3)}> - истина
Пример 6: {a+]}{(d*3)} - ложь

38. Написать метод, который переведет число из римского формата записи в арабский.
Например, MMXXII = 2022

39. Написать метод, который переведёт данное целое число в римский формат.

40. Взять набор строк, например, Мороз и солнце день чудесный Еще ты дремлешь друг прелестный Пора красавица проснись.
Написать метод, который отсортирует эти строки по длине с помощью TreeMap. Строки с одинаковой длиной не должны “потеряться”.

41. Реализуйте структуру телефонной книги с помощью HashMap, учитывая, что 1 человек может иметь несколько телефонов.

42 Пусть дан список сотрудников:Иван Иванов ( и остальные, полный текст дз будет на платформе)
Написать программу, которая найдет и выведет повторяющиеся имена с количеством повторений. Отсортировать по убыванию популярности.

43. Реализовать алгоритм пирамидальной сортировки (HeapSort).

44. Напишите метод, который заполнит массив из 1000 элементов случайными цифрами от 0 до 24.
Создайте метод, в который передайте заполненный выше массив и с помощью Set вычислите процент уникальных значений в данном массиве и верните его в виде числа с плавающей запятой.
Для вычисления процента используйте формулу:
процент уникальных чисел = количество уникальных чисел * 100 / общее количество чисел в массиве.

45. Продумайте структуру класса Кот. Какие поля и методы будут актуальны для приложения, которое является
а) информационной системой ветеринарной клиники
б) архивом выставки котов
в) информационной системой Театра кошек Ю. Д. Куклачёва
Можно записать в текстовом виде, не обязательно реализовывать в java.

Реализуйте 1 из вариантов класса Cat из предыдущего задания, можно использовать не все придуманные поля и методы. Создайте несколько экземпляров этого класса, выведите их в консоль.
Добейтесь того, чтобы при выводе в консоль объекта типа Cat, выводилась его кличка, цвет и возраст (или другие параметры на ваше усмотрение).

Создайте множество, в котором будут храниться экземпляры класса Cat - HashSet<Cat>. Поместите в него некоторое количество объектов.
Создайте 2 или более котов с одинаковыми параметрами в полях. Поместите их во множество.Убедитесь, что все они сохранились во множество.
Создайте метод public boolean equals(Object o). Пропишите в нём логику сравнения котов по параметрам, хранимым в полях. То есть, метод должен возвращать true, только если значения во всех полях сравниваемых объектов равны.
Создайте метод public int hashCode() который будет возвращать hash, вычисленный на основе полей класса Cat. (Можно использовать Objects.hash(...))
Выведите снова содержимое множества из пункта 2, убедитесь, что дубликаты удалились.

46. Подумать над структурой класса Ноутбук для магазина техники - выделить поля и методы. Реализовать в java.
Создать множество ноутбуков.
Написать метод, который будет запрашивать у пользователя критерий (или критерии) фильтрации и выведет ноутбуки, отвечающие фильтру. Критерии фильтрации можно хранить в Map. Например:
“Введите цифру, соответствующую необходимому критерию:
1 - ОЗУ
2 - Объем ЖД
3 - Операционная система
4 - Цвет …
Отфильтровать ноутбуки их первоначального множества и вывести проходящие по условиям.

47. Реализуйте класс Товар, содержащий данные о товаре, и ТорговыйАвтомат, содержащий в себе методы initProducts (List <Product>) сохраняющий в себе список исходных продуктов и getProduct(String name)

Реализовать конструкторы, get/set методы, построить логику ТорговогоАвтомата на основе кода сделанного в задании 1.2

Сделать класс Товар абстрактным, создать нескольких наследников (к примеру: БутылкаВоды), сделать интерфейсом ТорговыйАвтомат и реализовать класс какого-то одного типа ТорговогоАвтомата (пример: ПродающийБутылкиВодыАвтомат

Переопределить метод toString для Товара, запустить программу, после этого переопределить для наследника этот метод. Как изменится поведение метода?

Создать перегруженный метод выдачи товара ТорговымАвтоматом, включив дополнительный входной параметр (пример: getProduct(String name), выдающий товар по имени; создать метод, возвращающий товар по имени и какому-либо параметру товара getProduct(String name, int volume)

Создать наследника реализованного класса ГорячийНапиток с дополнительным полем int температура.

Создать класс ГорячихНапитковАвтомат реализующий интерфейс ТорговыйАвтомат и реализовать перегруженный метод getProduct(int name, int volume, int temperature) выдающий продукт соответствующий имени, объему и температуре

В main проинициализировать несколько ГорячихНапитков и ГорячихНапитковАвтомат и воспроизвести логику заложенную в программе

Все вышеуказанное создать согласно принципам ООП, пройдённым на семинаре

48. Исправить программу прикрепленную к семинару так чтобы она соответствовал MVC. Цель программы - автоматизация автомата для продажи заготовок для пиццы.

Расширить функционал разработанной программы:
Добавить помимо теста ещё три пиццы в автомат;
Добавить меню, которое пользователь сможет запросить с экрана терминала

В пиццерии использующей разработанный нами код возникла беда. Одна пицца из нашего меню набрала большую популярность, но ингредиенты для неё давно закончились. Как мы можем это исправить?

49. Представим что одна из крупных компаний решила создать торговые автоматы, заказы в которых нужно делать через веб-сайт. То есть вы заходите на сайт перед вами открывается карта, на которой отмечены автоматы этой компании. Нажимаете на один из них и вам выводится список товаров в нем. Вы выбираете нужные вам, оплачиваете и вам выдается код, который вы вводите подойдя к автомату и получаете ваши продукты.
Но прежде чем претворять идею в жизнь её надо протестировать на одном автомате, который поставят в вашем офисе. Вас выбрали для разработки бэкенда и фронтенда для него. Так как автомат один карту разрабатывать не нужно. Вам необходимо реализовать только список продуктов, их выбор, резервирование и получение по коду. При этом необходимо заложить фундамент для дальнейшего развития - создать несколько типов автоматов, несколько типов продуктов, возможность добавлять и удалять новые автоматы и возможно добавлять и удалять продукты.
1. Создайте три типа Автоматов
2. Для каждого типа автомата придумайте и создайте по 2 вида продукта
3. Реализуйте хранилище автоматов (репозиторий)
4. Реализуйте сервис для взаимодействия с репозиторием
5. Реализуйте классы данных, которые будут возвращаться на фронтенд
6. Реализуйте общий класс контроллер для автоматов со следующим функционалом:
* Получить список продуктов доступных в конкретном автомате
* Зарезервировать список продуктов в конкретном автомате (в ответ должен возвращаться код для получения этого списка продуктов)
* Получение списка продуктов по коду;

Если хотите подробнее разобраться в теме попробуйте самостоятельно доделать задачи, которые не успели разобрать на семинаре (по желанию). Текст задач найдете в презентации

50. Реализуйте чат бот для регистрации пользователя (пользователь взаимодействует с ботом посредством текстовых сообщений и одной кнопки отправить):
Создайте контроллер в который будет приходить сообщение
Реализуйте интерфейс задача. Каждая задача должна иметь метод выполнения, который принимает в себя текст сообщения, валидирует его и отправляет ответ
Реализуйте три задачи: приветствие, получение логина, получение пароля
Создайте сервис для взаимодействия с задачей

Реализуйте для него приложение для сравнения двух и более продуктов между собой.

Реализуйте в контроллере метод, который при вызове будет возвращать покупателю лучший продукт в торговом автомате

Формат сдачи:
Ссылка на гитхаб проект
Подписать фамилию и номер группы




На будущее:

1. Задано уравнение вида q + w = e, q, w, e >= 0. Некоторые цифры могут быть заменены знаком вопроса, например 2? + ?5 = 69. Требуется восстановить выражение до верного равенства. Предложить хотя бы одно решение или сообщить, что его нет. 24 45

2. Каталог товаров книжного магазина сохранен в виде двумерного списка List <ArrayList<String>> так, что на 0й позиции каждого внутреннего списка содержится название жанра, а на остальных позициях - названия книг. Напишите метод для заполнения данной структуры.

3. Шахматную доску размером NxN обойти конём так, чтобы фигура в каждой клетке была строго один раз.

4. На шахматной доске расставить 8 ферзей так, чтобы они не били друг друга.
